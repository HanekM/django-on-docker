version: '3.8'

volumes:
  postgres_data:
  static_volume:

networks:
  nginx_network:
    driver: bridge
  postgres_network:
    driver: bridge

services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.nginx
    ports:
      - 1337:80
    volumes:
      - static_volume:/web/static/
    depends_on:
      - web
    networks:
      - nginx_network

  web:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command: ['bash', '/usr/src/project/scripts/web_start.prod.sh']
    volumes:
      - ./src/:/usr/src/project/src/
      - ./scripts:/usr/src/project/scripts/
      - static_volume:/usr/src/project/src/staticfiles
    networks:
      - postgres_network
      - nginx_network
    expose:
      - "8000"
    env_file:
      - ./.env.prod
    depends_on:
      - postgres

  postgres:
    image: postgres:13.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - postgres_network
    environment:
      - POSTGRES_DB=postgres-db
      - POSTGRES_USER=postgres-admin
      - POSTGRES_PASSWORD=(Lp,97QB#GGwd=u

  redis:
    image: redis

  celery:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command: ['bash', '/usr/src/project/scripts/celery_start.dev.sh', '-t worker']
    env_file:
      - .env.prod
    volumes:
      - .:/usr/src/project
    depends_on:
      - postgres
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command: ['bash', '/usr/src/project/scripts/celery_start.dev.sh', '-t beat']
    env_file:
      - .env.prod
    volumes:
      - .:/usr/src/project
    depends_on:
      - postgres
      - redis
